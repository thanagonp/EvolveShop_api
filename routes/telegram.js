import express from 'express';
import axios from 'axios';
import * as fuzz from 'fuzzball';
import Product from '../models/Product.js';

const router = express.Router();

const TELEGRAM_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TOGETHER_API_KEY = process.env.TOGETHER_API_KEY;
const TELEGRAM_API = `https://api.telegram.org/bot${TELEGRAM_TOKEN}`;
const TOGETHER_API = "https://api.together.xyz/v1/chat/completions";

const TRIGGER_KEYWORDS = [
  '‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥', '‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤', '‡∏†‡∏≤‡∏û', '‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á', '‡πÄ‡∏´‡∏°‡∏≤‡∏∞', '‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡∏î‡∏µ', '‡∏á‡∏ö', '‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô', '‡∏ñ‡∏π‡∏Å‡∏™‡∏∏‡∏î', '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢'
];

function findBestMatchingProduct(products, userText) {
  const productNames = products.map(p => p.name);
  const result = fuzz.extract(userText, productNames, {
    scorer: fuzz.token_set_ratio,
    returnObjects: true
  });

  const bestMatch = result[0];
  if (bestMatch && bestMatch.score >= 70) {
    return products.find(p => p.name === bestMatch.string);
  }

  return null;
}

router.post('/telegram', async (req, res) => {
  const message = req.body.message;
  if (!message || !message.text) return res.sendStatus(200);

  const chatId = message.chat.id;
  const userText = message.text;

  try {
    const products = await Product.find({ status: 'available' });

    const productSummary = products.map(p => (
      `- ${p.name} ‡∏£‡∏≤‡∏Ñ‡∏≤ ${p.price} ‡∏ö‡∏≤‡∏ó ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${p.stock} ‡∏ä‡∏¥‡πâ‡∏ô`
    )).join('\n');

    const matchedProduct = findBestMatchingProduct(products, userText);

    const systemPrompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠ \"Evolve Shop\" ‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

‡∏£‡πâ‡∏≤‡∏ô‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:
${productSummary}

${matchedProduct ? `
üîé ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ:
- ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${matchedProduct.name}
- ‡∏£‡∏≤‡∏Ñ‡∏≤: ${matchedProduct.price} ‡∏ö‡∏≤‡∏ó
- ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${matchedProduct.stock} ‡∏ä‡∏¥‡πâ‡∏ô
- ‡∏™‡∏µ: ${matchedProduct.color || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}
- ‡πÑ‡∏ã‡∏ã‡πå: ${Array.isArray(matchedProduct.size) ? matchedProduct.size.join(', ') : matchedProduct.size || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}
- ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: ${matchedProduct.category || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}` : ''}

üìå ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
- ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô
- ‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏ô‡πÉ‡∏à
- ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
- ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏™‡∏±‡πâ‡∏ô ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢

‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß`;

    const shouldSendImages = TRIGGER_KEYWORDS.some(keyword =>
      userText.toLowerCase().includes(keyword)
    );

    if (shouldSendImages) {
      const imagesToSend = matchedProduct
        ? [matchedProduct, ...products.filter(p => p._id !== matchedProduct._id).slice(0, 2)]
        : products.slice(0, 3);

      for (const p of imagesToSend) {
        if (p.images?.length > 0) {
          await axios.post(`${TELEGRAM_API}/sendPhoto`, {
            chat_id: chatId,
            photo: p.images[0],
            caption: `${p.name} - ${p.price} ‡∏ö‡∏≤‡∏ó\n‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${p.stock} ‡∏ä‡∏¥‡πâ‡∏ô`
          });
        }
      }
    }

    const aiResponse = await axios.post(TOGETHER_API, {
      model: "meta-llama/Llama-Vision-Free",
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: userText }
      ]
    }, {
      headers: {
        Authorization: `Bearer ${TOGETHER_API_KEY}`,
        "Content-Type": "application/json"
      }
    });

    let aiReply = aiResponse.data.choices[0].message.content.trim();

    if (!aiReply) {
      aiReply = '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á';
    }

    await axios.post(`${TELEGRAM_API}/sendMessage`, {
      chat_id: chatId,
      text: aiReply
    });

    res.sendStatus(200);
  } catch (err) {
    console.error(err.response?.data || err.message);
    res.sendStatus(500);
  }
});

export default router;